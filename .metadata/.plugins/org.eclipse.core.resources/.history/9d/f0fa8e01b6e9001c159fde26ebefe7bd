import java.util.ArrayList;
import java.util.Collections;


public class ColaDePrioridad {

	ArrayList<Integer> elementos = new ArrayList<Integer>();

	public ColaDePrioridad() {
	}

	public void ponerEnCola(Integer nro) {
		elementos.add(nro);
	}

	public ArrayList<Integer> getElementos() {
		return elementos;
	}

	public Integer sacarDeCola() {

		if(elementos.size()==0)
			return null;
		Integer retorno = elementos.get(0);

		Collections.swap(elementos, 0,elementos.size()-1);
		elementos.remove(elementos.size()-1);
		
		bajarNodo(0);

		return retorno;
	}
	
	public void bajarNodo(int idxNodo) {
		boolean seguirBajando = true;

		while (seguirBajando) {
			
			int idxHijoIzq = 2 * idxNodo+1;
			int idxHijoDer = 2 * idxNodo+2;
			boolean mayorQueHijoIzq = false;
			boolean mayorQueHijoDer = false;
			
			if (idxHijoIzq <= elementos.size()-1 && elementos.get(idxNodo) > elementos.get(idxHijoIzq) )
				mayorQueHijoIzq = true;
			if (idxHijoDer <= elementos.size()-1 && elementos.get(idxNodo) > elementos.get(idxHijoDer) )
				mayorQueHijoDer = true;
			if (mayorQueHijoDer && mayorQueHijoIzq) {
				if (elementos.get(idxHijoIzq) < elementos.get(idxHijoDer)) {
					Collections.swap(elementos, idxNodo, idxHijoIzq);
					idxNodo = idxHijoIzq;
				} else {
					Collections.swap(elementos, idxNodo, idxHijoDer);
					idxNodo = idxHijoDer;
				}
			}else if(mayorQueHijoDer&&!mayorQueHijoIzq) {
				Collections.swap(elementos, idxNodo, idxHijoDer);
				idxNodo=idxHijoDer;
			}else if(!mayorQueHijoDer&&mayorQueHijoIzq) {
				Collections.swap(elementos, idxHijoIzq, idxNodo);
			}else {
				seguirBajando=false;
			}
		}
	}
}
